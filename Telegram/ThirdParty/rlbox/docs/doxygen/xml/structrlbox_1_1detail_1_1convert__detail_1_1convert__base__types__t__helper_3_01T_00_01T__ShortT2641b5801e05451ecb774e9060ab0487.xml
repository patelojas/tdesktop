<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structrlbox_1_1detail_1_1convert__detail_1_1convert__base__types__t__helper_3_01T_00_01T__ShortT2641b5801e05451ecb774e9060ab0487" kind="struct" language="C++" prot="public">
    <compoundname>rlbox::detail::convert_detail::convert_base_types_t_helper&lt; T, T_ShortType, T_IntType, T_LongType, T_LongLongType, T_PointerType, std::enable_if_t&lt; std::is_unsigned_v&lt; T &gt; &amp;&amp;!std::is_same_v&lt; T, bool &gt; &amp;&amp;!std::is_const_v&lt; T &gt; &amp;&amp;!std::is_enum_v&lt; T &gt; &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename T_ShortType</type>
      </param>
      <param>
        <type>typename T_IntType</type>
      </param>
      <param>
        <type>typename T_LongType</type>
      </param>
      <param>
        <type>typename T_LongLongType</type>
      </param>
      <param>
        <type>typename T_PointerType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structrlbox_1_1detail_1_1convert__detail_1_1convert__base__types__t__helper_3_01T_00_01T__ShortT2641b5801e05451ecb774e9060ab0487_1a621abfee37aa239f65c0f878a631e66b" prot="public" static="no">
        <type>std::make_unsigned_t&lt; typename <ref refid="structrlbox_1_1detail_1_1convert__detail_1_1convert__base__types__t__helper" kindref="compound">convert_base_types_t_helper</ref>&lt; std::make_signed_t&lt; T &gt;, T_ShortType, T_IntType, T_LongType, T_LongLongType, T_PointerType &gt;::type &gt;</type>
        <definition>using rlbox::detail::convert_detail::convert_base_types_t_helper&lt; T, T_ShortType, T_IntType, T_LongType, T_LongLongType, T_PointerType, std::enable_if_t&lt; std::is_unsigned_v&lt; T &gt; &amp;&amp;!std::is_same_v&lt; T, bool &gt; &amp;&amp;!std::is_const_v&lt; T &gt; &amp;&amp;!std::is_enum_v&lt; T &gt; &gt; &gt;::type =  std::make_unsigned_t&lt; typename convert_base_types_t_helper&lt;std::make_signed_t&lt;T&gt;, T_ShortType, T_IntType, T_LongType, T_LongLongType, T_PointerType&gt;::type&gt;</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/shr/Code/LibrarySandboxing/rlbox_api_cpp17/code/include/rlbox_type_traits.hpp" line="388" column="1" bodyfile="/home/shr/Code/LibrarySandboxing/rlbox_api_cpp17/code/include/rlbox_type_traits.hpp" bodystart="394" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/shr/Code/LibrarySandboxing/rlbox_api_cpp17/code/include/rlbox_type_traits.hpp" line="387" column="1" bodyfile="/home/shr/Code/LibrarySandboxing/rlbox_api_cpp17/code/include/rlbox_type_traits.hpp" bodystart="378" bodyend="395"/>
    <listofallmembers>
      <member refid="structrlbox_1_1detail_1_1convert__detail_1_1convert__base__types__t__helper_3_01T_00_01T__ShortT2641b5801e05451ecb774e9060ab0487_1a621abfee37aa239f65c0f878a631e66b" prot="public" virt="non-virtual"><scope>rlbox::detail::convert_detail::convert_base_types_t_helper&lt; T, T_ShortType, T_IntType, T_LongType, T_LongLongType, T_PointerType, std::enable_if_t&lt; std::is_unsigned_v&lt; T &gt; &amp;&amp;!std::is_same_v&lt; T, bool &gt; &amp;&amp;!std::is_const_v&lt; T &gt; &amp;&amp;!std::is_enum_v&lt; T &gt; &gt; &gt;</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
